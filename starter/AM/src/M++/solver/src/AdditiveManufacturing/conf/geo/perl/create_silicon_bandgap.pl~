#!/usr/bin/perl
# $Header: /public/M++/tools/create_geo_plate.pl,v 1.3 2007-07-20 09:35:24 sydow Exp $
# ----------------------------------------------------------------------
# file:    M++/scripts/create_geo_plate.pl
# author:  Antje Sydow
# date:    begin: March 16, 2006; last modified: March 07, 2007
# purpose: create .geo file of a plate as geometry input to M++
#          plate normal is parallel to z-axis
#          plate is discretised with 1 coarse element along z-axis
#          without offsets: front left bottom corner coincides with (0,0,0)
#
# usage:   start this script from M++/tools
#
#          key for boundary conditions:
#            1: Dirichlet b.c. for x-, y-, and z-direction
#          100: Dirichlet b.c. for x-direction
#          101: Dirichlet b.c. for y-direction
#          102: Dirichlet b.c. for z-direction
#          110: Dirichlet symmetry b.c. for x-direction (u_x = 0)
#          111: Dirichlet symmetry b.c. for y-direction (u_y = 0)
#          112: Dirichlet symmetry b.c. for z-direction (u_z = 0)
#          199: Dirichlet b.c. all directions pinned (u_x = u_y = u_z = 0)
# needs:   create_tools.pm

use create_tools;

use warnings;
use strict;

# ----------------------------------------------------------------------
# Input required:
# ----------------------------------------------------------------------
# output written to this .geo file
my $geofile = "../BEM/conf/geo/BandGapSilicon3.geo";  

my $cells_x = 6;                 # number of coarse elements along x-axis
my $cells_y = 3;                 # number of coarse elements along y-axis

my $length_x = 24.0;             # length along x-axis
my $length_y = 9.0;              # length along y-axis
my $length_z = 2.5;              # length along z-axis

my $offset_x = 0.0;              # offset of plate along x-axis 
my $offset_y = 0.0;              # offset of plate along y-axis 
my $offset_z = 0.0;              # offset of plate along z-axis 

my $bc_left    = 199;            # id numbers of boundary conditions 
my $bc_right   = 1;                  
my $bc_front   = 0;
my $bc_back    = 0;                  
my $bc_top     = 0;                  
my $bc_bottom  = 0;                  

my $sd_id = 0;                 # id numbers of subdomains

# ----------------------------------------------------------------------
# (0) determining additional variables, etc.
# ----------------------------------------------------------------------
initialize_geofile($geofile);

# dimension of individual cell
my $inc_x = $length_x / $cells_x ;
my $inc_y = $length_y / $cells_y ;

# geometry data
my $nodes_per_face = 4;
my $nodes_per_cell = 8;

# ----------------------------------------------------------------------
# (1) POINTS
# ----------------------------------------------------------------------
write_title($geofile, "POINTS");

my $cell_x = 0;
my $cell_y = 0;
my $nodes_per_layer = 0;

# lower layer
while ($cell_y < $cells_y + 1) {
    while ($cell_x < $cells_x + 1){
	write_point($geofile,
		    $cell_x * $inc_x + $offset_x,
		    $cell_y * $inc_y + $offset_y,
		    $offset_z);
	$cell_x += 1;
	$nodes_per_layer += 1;
    }
    $cell_x  = 0;
    $cell_y += 1;
}

# upper layer
$cell_x  = 0;
$cell_y  = 0;
while ($cell_y < $cells_y + 1) {
    while ($cell_x < $cells_x + 1){
	write_point($geofile,
		    $cell_x * $inc_x + $offset_x,
		    $cell_y * $inc_y + $offset_y,
		    $length_z + $offset_z);
	$cell_x += 1;
    }
    $cell_x  = 0;
    $cell_y += 1;
}

# ----------------------------------------------------------------------
# (2) CELLS
# ----------------------------------------------------------------------
write_title($geofile, "CELLS");

$cell_x = 0;
$cell_y = 0;

while ($cell_y < $cells_y) {
    while ($cell_x < $cells_x) {
	write_hex8($geofile, $nodes_per_cell, $sd_id, "cell ($cell_x,$cell_y)",
		   0 + $cell_x + $cell_y * ($cells_x + 1),
		   1 + $cell_x + $cell_y * ($cells_x + 1),
		   1 + $cell_x + ($cell_y + 1) * ($cells_x + 1),
		   0 + $cell_x + ($cell_y + 1) * ($cells_x + 1),
		   0 + $nodes_per_layer + $cell_x + $cell_y * ($cells_x + 1),
		   1 + $nodes_per_layer + $cell_x + $cell_y * ($cells_x + 1),
		   1 + $nodes_per_layer + $cell_x + ($cell_y + 1) * ($cells_x + 1),
		   0 + $nodes_per_layer + $cell_x + ($cell_y + 1) * ($cells_x + 1));
	$cell_x += 1;
    }
    $cell_x  = 0;
    $cell_y += 1;
}

# ----------------------------------------------------------------------
# (3) FACES 
# ----------------------------------------------------------------------
write_title($geofile, "FACES");

# front face
$cell_x  = 0;
while ($cell_x < $cells_x) {
    write_face4($geofile, $nodes_per_face, $bc_front, "cell $cell_x front",
		0 + $cell_x,
		1 + $cell_x,
		1 + $nodes_per_layer + $cell_x,
		0 + $nodes_per_layer + $cell_x);
    $cell_x += 1;
}
 
# top face
$cell_x = 0;
$cell_y = 0;
while ($cell_y < $cells_y) {
    while ($cell_x < $cells_x) {
    write_face4($geofile, $nodes_per_face, $bc_top, "cell $cell_x,$cell_y top",
		    0 + $nodes_per_layer + $cell_x + $cell_y * ($cells_x + 1),
		    1 + $nodes_per_layer + $cell_x + $cell_y * ($cells_x + 1),
		    $cells_x + 2 + $nodes_per_layer + $cell_x + $cell_y * ($cells_x + 1),
		    $cells_x + 1 + $nodes_per_layer + $cell_x + $cell_y * ($cells_x + 1));
	$cell_x += 1;
    }
    $cell_x  = 0;
    $cell_y += 1;
}

# back face
$cell_x  = 0;
while ($cell_x < $cells_x) {
    write_face4($geofile, $nodes_per_face, $bc_back, "cell $cell_x back",
		$nodes_per_layer - $cells_x - 1 + $cell_x,
		$nodes_per_layer - $cells_x + $cell_x ,
		2 * $nodes_per_layer - $cells_x + $cell_x,
		2 * $nodes_per_layer - $cells_x - 1 + $cell_x);
    $cell_x += 1;
}

# bottom face
$cell_x = 0;
$cell_y = 0;
while ($cell_y < $cells_y) {
    while ($cell_x < $cells_x) {
	write_face4($geofile, $nodes_per_face, $bc_bottom, "cell $cell_x,$cell_y bottom",
		    0 + $cell_x + $cell_y * ($cells_x + 1),
		    1  + $cell_x + $cell_y * ($cells_x + 1),
		    $cells_x + 2 + $cell_x + $cell_y * ($cells_x + 1),
		    $cells_x + 1 + $cell_x + $cell_y * ($cells_x + 1));
	$cell_x += 1;
    }
    $cell_x  = 0;
    $cell_y += 1;
}

# left face
$cell_y = 0;
while ($cell_y < $cells_y) {
    write_face4($geofile, $nodes_per_face, $bc_left, "cell $cell_y left",
		0 + $cell_y * ($cells_x + 1),
		$cells_x + 1 + $cell_y * ($cells_x + 1),
		$nodes_per_layer + $cells_x + 1 + $cell_y * ($cells_x + 1),
		$nodes_per_layer + $cell_y * ($cells_x + 1));
    $cell_y += 1;
}

# right face
$cell_y = 0;
while ($cell_y < $cells_y) {
    write_face4($geofile, $nodes_per_face, $bc_right, "cell $cell_y right",
		$cells_x + $cell_y * ($cells_x + 1),
		$cells_x + $cells_x + 1 + $cell_y * ($cells_x + 1),
		$nodes_per_layer + $cells_x + $cells_x + 1 + $cell_y * ($cells_x + 1),
		$nodes_per_layer + $cells_x + $cell_y * ($cells_x + 1));
    $cell_y += 1;
}

# ----------------------------------------------------------------------
print "\n"; 
print "Geometry written to $geofile";
print ".\n\n"; 
# ======================================================================
#     END
# ======================================================================
