// file: TElastoPlasticity.C
// author: Jiping Xin
// This module is to solve elastoplasticity problem
// by using the Newton method and the return mapping algorithm.

#include "m++.h"
#include "TElastoPlasticityProblems.h"
#include "ReturnMappingAlgo.h"
#include <fstream>

class TElastoPlasticity2Assemble : public TElastoPlasticityProblems {
    int dim;
    Discretization disc;
	double Mu = 1;
    double Lambda = 1;
    Tensor4 I4;
	
  public:
	TElastoPlasticity2Assemble (int _dim);
	void SetDirichlet (Vector& u, double t);
    void Update (const Tensor epsilon2, const Tensor epsilonp1, const double alpha1, const Tensor beta1,
				 Tensor& epsilonp2, double& alpha2, Tensor& beta2, Tensor4& C2, Tensor& sigma2);
    void Update (Vector& x, Vector& EpsilonP1, Vector& Alpha1, Vector& Beta1);
	void Jacobi (Matrix& A);
    double Residual (Vector& b, Vector& g_D, Vector& x0, Vector& x1, Vector& EpsilonP1, Vector& Alpha1, Vector& Beta1,
					 double time=0);
    double L2Error (const Vector& x);
	void SetH0 (Vector& x0);
	void SetH1 (Vector& x1, double dt);
};

void TElastoPlasticity2Main ();
