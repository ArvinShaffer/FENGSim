// file: StaticLinearElasticityBVP.h
// author: Jiping Xin

#include "m++.h"

enum BOUNARYTYPE { DIRICHLET = 1, NEUMANN = 0};
enum EXAMPLE {exam1 = 1, exam2 = 2, exam3 = 3, 
			  exam4 = 4, exam5 = 5, exam6 = 6,
			  exam7 = 7, exam8 = 8, exam9 = 9,
			  exam10 = 10, exam11 = 11, exam12 = 12,
			  exam13 = 13, exam14 = 14, exam15 = 15,
			  exam16 = 16, exam17 = 17, exam18 = 18};

class ElastoPlasticityProblems {
    int example_id;
public:
    double mu = 1;
	double lambda = 1;
    double Young = 1;
    double PoissonRatio = 1;
    double k_0 = 1;
    double h_0 = 0;
public:
    ElastoPlasticityProblems () {
		ReadConfig(Settings, "EXAMPLE", example_id);
		ReadConfig(Settings, "Young", Young);
		ReadConfig(Settings, "PoissonRatio", PoissonRatio);
		ReadConfig(Settings, "k_0", k_0);
		ReadConfig(Settings, "h_0", h_0);
		
		// calculate mu and lambda
		mu = Young/2.0/(1 + PoissonRatio);
		lambda = Young*PoissonRatio/(1 + PoissonRatio)/(1 - 2*PoissonRatio);
		mout << "    mu: " << mu << " lambda: " << lambda << endl;
    }
	void SetSubDomain (Mesh& M);
	void SetBoundaryType (Mesh& M);
    bool IsDirichlet (int id);
    Point SetSolution (Point p, double t = 0);
    Point SetSource (Point p, double t = 0);
    void SetDirichlet (Point p, double T, int k, RowBndValues& u_c, int id);
    Point SetNeumann (Point p, double t, int id);
};
